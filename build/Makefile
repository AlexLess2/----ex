# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=pie_unix
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES +=
INCLUDES +=
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),pie_unix)
TARGETDIR = .
TARGET = $(TARGETDIR)/Lab1
OBJDIR = obj/Unix

else ifeq ($(config),pie_windows)
TARGETDIR = .
TARGET = $(TARGETDIR)/Lab1.exe
OBJDIR = obj/Windows

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/PickTasks.o
GENERATED += $(OBJDIR)/change.o
GENERATED += $(OBJDIR)/check_array.o
GENERATED += $(OBJDIR)/check_file.o
GENERATED += $(OBJDIR)/check_size.o
GENERATED += $(OBJDIR)/display.o
GENERATED += $(OBJDIR)/elemCoordsSearch.o
GENERATED += $(OBJDIR)/elemSumSearch.o
GENERATED += $(OBJDIR)/enter_layer.o
GENERATED += $(OBJDIR)/enter_size.o
GENERATED += $(OBJDIR)/enter_steps.o
GENERATED += $(OBJDIR)/entering_array.o
GENERATED += $(OBJDIR)/entering_array_from_text.o
GENERATED += $(OBJDIR)/ex1.o
GENERATED += $(OBJDIR)/ex2.o
GENERATED += $(OBJDIR)/ex3.o
GENERATED += $(OBJDIR)/fillArray.o
GENERATED += $(OBJDIR)/fillModulusArray.o
GENERATED += $(OBJDIR)/fillUnsortedArray.o
GENERATED += $(OBJDIR)/flip_array.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/menu.o
GENERATED += $(OBJDIR)/minElemSearch.o
GENERATED += $(OBJDIR)/modulusSort.o
GENERATED += $(OBJDIR)/pickElem.o
GENERATED += $(OBJDIR)/printArray.o
GENERATED += $(OBJDIR)/shift_layer.o
GENERATED += $(OBJDIR)/sumAfterElem.o
OBJECTS += $(OBJDIR)/PickTasks.o
OBJECTS += $(OBJDIR)/change.o
OBJECTS += $(OBJDIR)/check_array.o
OBJECTS += $(OBJDIR)/check_file.o
OBJECTS += $(OBJDIR)/check_size.o
OBJECTS += $(OBJDIR)/display.o
OBJECTS += $(OBJDIR)/elemCoordsSearch.o
OBJECTS += $(OBJDIR)/elemSumSearch.o
OBJECTS += $(OBJDIR)/enter_layer.o
OBJECTS += $(OBJDIR)/enter_size.o
OBJECTS += $(OBJDIR)/enter_steps.o
OBJECTS += $(OBJDIR)/entering_array.o
OBJECTS += $(OBJDIR)/entering_array_from_text.o
OBJECTS += $(OBJDIR)/ex1.o
OBJECTS += $(OBJDIR)/ex2.o
OBJECTS += $(OBJDIR)/ex3.o
OBJECTS += $(OBJDIR)/fillArray.o
OBJECTS += $(OBJDIR)/fillModulusArray.o
OBJECTS += $(OBJDIR)/fillUnsortedArray.o
OBJECTS += $(OBJDIR)/flip_array.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/menu.o
OBJECTS += $(OBJDIR)/minElemSearch.o
OBJECTS += $(OBJDIR)/modulusSort.o
OBJECTS += $(OBJDIR)/pickElem.o
OBJECTS += $(OBJDIR)/printArray.o
OBJECTS += $(OBJDIR)/shift_layer.o
OBJECTS += $(OBJDIR)/sumAfterElem.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Lab1
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Lab1
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/PickTasks.o: ../exercise_1/PickTasks.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/elemCoordsSearch.o: ../exercise_1/elemCoordsSearch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/elemSumSearch.o: ../exercise_1/elemSumSearch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ex1.o: ../exercise_1/ex1.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fillArray.o: ../exercise_1/fillArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fillModulusArray.o: ../exercise_1/fillModulusArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fillUnsortedArray.o: ../exercise_1/fillUnsortedArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/minElemSearch.o: ../exercise_1/minElemSearch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/modulusSort.o: ../exercise_1/modulusSort.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pickElem.o: ../exercise_1/pickElem.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/printArray.o: ../exercise_1/printArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sumAfterElem.o: ../exercise_1/sumAfterElem.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/display.o: ../exercise_2/display.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/enter_layer.o: ../exercise_2/enter_layer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/enter_size.o: ../exercise_2/enter_size.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/enter_steps.o: ../exercise_2/enter_steps.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entering_array.o: ../exercise_2/entering_array.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ex2.o: ../exercise_2/ex2.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/flip_array.o: ../exercise_2/flip_array.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shift_layer.o: ../exercise_2/shift_layer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/change.o: ../exercise_3/change.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/check_array.o: ../exercise_3/check_array.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/check_file.o: ../exercise_3/check_file.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/check_size.o: ../exercise_3/check_size.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entering_array_from_text.o: ../exercise_3/entering_array_from_text.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ex3.o: ../exercise_3/ex3.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: ../main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/menu.o: ../menu.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif